# —é–§—É–Ω–∫—Ü–∏—è get_biggest() üå∂Ô∏èüå∂Ô∏è
# –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é get_biggest(), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç:
# numbers ‚Äî —Å–ø–∏—Å–æ–∫ —Ü–µ–ª—ã—Ö –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª
# –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –Ω–∞–∏–±–æ–ª—å—à–µ–µ —á–∏—Å–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–Ω–æ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –∏–∑ —á–∏—Å–µ–ª –∏–∑ —Å–ø–∏—Å–∫–∞ numbers.
# –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ numbers –ø—É—Å—Ç, —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å —á–∏—Å–ª–æ ‚àí1.
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –†–∞—Å—Å–º–æ—Ç—Ä–∏–º –ø–µ—Ä–≤—ã–π —Ç–µ—Å—Ç —Å–æ —Å–ø–∏—Å–∫–æ–º —á–∏—Å–µ–ª [1, 2. Data type set and dict.txt, 3.txt], –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ —Å–æ—Å—Ç–∞–≤–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ —á–∏—Å–ª–∞:
# 123, 132, 213, 231, 312, 321
# –ù–∞–∏–±–æ–ª—å—à–∏–º –∏–∑ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö —è–≤–ª—è–µ—Ç—Å—è 321.


def get_biggest(numbers):
    if len(numbers) == 0:
        return -1
    max_len = max(numbers, key=lambda x: len(str(x)))
    sorted_numbers = sorted(numbers, key=lambda x: str(x)*max_len, reverse=True)
    resault = ''
    for num in sorted_numbers:
        resault += str(num)
    return int(resault)


print(get_biggest([1, 2, 3]))
print(get_biggest([61, 228, 9, 3, 11]))
print(get_biggest([7, 71, 72]))