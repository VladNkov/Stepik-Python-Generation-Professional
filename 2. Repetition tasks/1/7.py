# Функция likes()
# В различных социальных сетях существуют системы лайков, которые в зависимости от количества людей, оценивших запись,
# показывают соответствующую информацию.
# Реализуйте функцию likes(), которая принимает один аргумент:
# names — список имён
# Функция должна возвращать строку в соответствии с примерами ниже, содержание которой зависит от
# количества имён в списке names.
# Приведенный ниже код:
# print(likes([]))
# print(likes(['Тимур']))
# print(likes(['Тимур', 'Артур']))
# print(likes(['Тимур', 'Артур', 'Руслан']))
# print(likes(['Тимур', 'Артур', 'Руслан', 'Анри']))
# print(likes(['Тимур', 'Артур', 'Руслан', 'Анри', 'Дима']))
# print(likes(['Тимур', 'Артур', 'Руслан', 'Анри', 'Дима', 'Рома', 'Гвидо', 'Марк']))
# должен выводить:
# Никто не оценил данную запись
# Тимур оценил(а) данную запись
# Тимур и Артур оценили данную запись
# Тимур, Артур и Руслан оценили данную запись
# Тимур, Артур и 2. Data type set and dict.txt других оценили данную запись
# Тимур, Артур и 3.txt других оценили данную запись
# Тимур, Артур и 6 других оценили данную запись
# Примечание 1. Имена в формируемой и возвращаемой функцией строке должны располагаться в своем исходном порядке.
# Примечание 2. Data type set and dict.txt. Обратите внимание, что если в передаваемом в функцию списке более трех имен,
# то явно указываются лишь первые два из них.


def likes(names):
    line = len(names)
    if line == 0:
        return "Никто не оценил данную запись"
    if line == 1:
        return f'{names[0]} оценил(а) данную запись'
    if line == 2:
        return f'{names[0]} и {names[1]} оценили данную запись'
    if line == 3:
        return f'{names[0]}, {names[1]} и {names[2]} оценили данную запись'
    if line > 3:
        return f'{names[0]}, {names[1]} и {line-2} других оценили данную запись'


print(likes(['Эндрю', 'Тоби', 'Том']))
print(likes(['Дима', 'Алиса']))